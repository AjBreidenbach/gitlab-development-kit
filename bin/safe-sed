#!/usr/bin/env bash

set -euo pipefail
IFS=$'\n\t'
BACKUP_DIR=.bak

# Usage: safe-sed [dest-file-name] [sed-params]...
# The first parameter is the destination file
# The remaining parameters are sent to sed
dest_file=$1
shift

dest_new_content_temp_file=$(mktemp)
function finish {
  rm -f "${dest_new_content_temp_file}"
}
trap finish EXIT

sed "$@" > "${dest_new_content_temp_file}"

if [[ -f "$dest_file" ]]; then
  # If the target file exists and differs from what we want to see in it...
  if ! cmp --silent "${dest_file}" "${dest_new_content_temp_file}"; then
    mkdir -p ${BACKUP_DIR}
    backup_file=${BACKUP_DIR}/${dest_file//\//__}.$(date +'%Y%m%d%H%M%S')
    mv "${dest_file}" "${backup_file}"
    mv "${dest_new_content_temp_file}" "${dest_file}"

    echo "-------------------------------------------------------------------------------------------------------------"
    echo "Warning: Your '${dest_file}' is overwritten. These are the changes GDK has made."
    echo "-------------------------------------------------------------------------------------------------------------"

    [[ $(tput colors) -ge 8 ]] && color_arg="--color" || color_arg=""
    git --no-pager diff --no-index ${color_arg} -u "${backup_file}" "${dest_file}" || true

    echo "-------------------------------------------------------------------------------------------------------------"
    echo "To recover the old file run:"
    echo "  cp -f '${backup_file}' '${dest_file}'"
    echo "... Waiting 5 seconds for previous warning to be noticed."
    echo "-------------------------------------------------------------------------------------------------------------"
    sleep 5
  fi
else
  mv "${dest_new_content_temp_file}" "${dest_file}"
fi
